[{"title":"NodeJs 学习","url":"/2023/06/08/NodeJs-%E5%AD%A6%E4%B9%A0/","content":"<meta name=\"referrer\" content=\"no-referrer\">\n\n\n<h2 id=\"node-js-介绍\"><a href=\"#node-js-介绍\" class=\"headerlink\" title=\"node.js 介绍\"></a>node.js 介绍</h2><h3 id=\"node-js-是什么？\"><a href=\"#node-js-是什么？\" class=\"headerlink\" title=\"node.js 是什么？\"></a>node.js 是什么？</h3><ol>\n<li>node.js 是一个开发平台，就像Java开发平台、.Net开发平台、PHP开发平台、Apple开发平台一样。</li>\n</ol>\n<ul>\n<li>何为开发平台？有对应的编程语言、有语言运行时、有能实现特定功能的API(SDK：Software Development Kit)</li>\n</ul>\n<ol start=\"2\">\n<li>nodejs平台使用的编程语言是 JavaScript 语言。</li>\n</ol>\n<ul>\n<li>不支持 window、document、bom 对象。</li>\n</ul>\n<ol start=\"3\">\n<li><p>node.js平台是基于 Chrome V8 JavaScript 引擎构建。</p>\n</li>\n<li><p>基于 node.js 可以开发控制台程序(命令行程序、CLI程序)、桌面应用程序(GUI)(借助 node-webkit、electron 等框架实现)、Web 应用程序(网站)。</p>\n</li>\n</ol>\n<blockquote>\n<p>PHP开发技术栈: LAMP - Linux Apache MySQL PHP<br>node.js 全栈开发技术栈: MEAN - MongoDB Express Angular Node.js</p>\n</blockquote>\n<h3 id=\"node-js-有哪些特点？\"><a href=\"#node-js-有哪些特点？\" class=\"headerlink\" title=\"node.js 有哪些特点？\"></a>node.js 有哪些特点？</h3><ol>\n<li>事件驱动(当事件被触发时，执行传递过去的回调函数)</li>\n<li>非阻塞 I&#x2F;O 模型(当执行I&#x2F;O操作时，不会阻塞线程)</li>\n<li>单线程</li>\n<li>拥有世界最大的开源库生态系统 —— npm。</li>\n</ol>\n<h3 id=\"node-js-网站\"><a href=\"#node-js-网站\" class=\"headerlink\" title=\"node.js 网站\"></a>node.js 网站</h3><ol>\n<li><a href=\"https://nodejs.org/en\">node.js官方网站</a></li>\n<li><a href=\"https://nodejs.cn/\">node.js中文网</a></li>\n<li><a href=\"https://cnodejs.org/\">node.js中文社区</a></li>\n</ol>\n<h3 id=\"学习目标\"><a href=\"#学习目标\" class=\"headerlink\" title=\"学习目标\"></a>学习目标</h3><ol>\n<li>了解服务器开发过程</li>\n<li>会使用 node.js 开发基本的 http 服务程序(Web应用程序)</li>\n</ol>\n<h3 id=\"Node-js可以用来做什么？\"><a href=\"#Node-js可以用来做什么？\" class=\"headerlink\" title=\"Node.js可以用来做什么？\"></a>Node.js可以用来做什么？</h3><ul>\n<li>具有复杂逻辑的动态网站</li>\n<li>WebSocket服务器</li>\n<li>命令行工具</li>\n<li>带有图形界面的本地应用程序</li>\n<li>···</li>\n</ul>\n<h2 id=\"终端基本使用\"><a href=\"#终端基本使用\" class=\"headerlink\" title=\"终端基本使用\"></a>终端基本使用</h2><h3 id=\"打开应用\"><a href=\"#打开应用\" class=\"headerlink\" title=\"打开应用\"></a>打开应用</h3><ul>\n<li>notepad 打开记事本</li>\n<li>mspaint 打开画图</li>\n<li>calc 打开计算机</li>\n<li>write 打开写字板</li>\n<li>sysdm.cpl 打开环境变量设置窗口</li>\n</ul>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><ul>\n<li>md 创建目录</li>\n<li>rmdir(rd) 删除目录，目录内没有文档</li>\n<li>echo on a.txt 创建空文件</li>\n<li>del 删除文件</li>\n<li>rm 文件名 删除文件</li>\n</ul>\n<h3 id=\"Node-js开发环境准备\"><a href=\"#Node-js开发环境准备\" class=\"headerlink\" title=\"Node.js开发环境准备\"></a>Node.js开发环境准备</h3><ol>\n<li><p>普通安装方式<a href=\"https://nodejs.org/zh-cn\">官方网站</a></p>\n</li>\n<li><p>多版本安装方式</p>\n</li>\n</ol>\n<ul>\n<li>卸载已有的Node.js</li>\n<li>下载nvm</li>\n<li>在C盘创建目录dev</li>\n<li>在dev目中中创建两个子目录nvm和nodejs</li>\n<li>并且把nvm包解压进去nvm目录中</li>\n<li>在install.cmd文件上面右键选择【以管理员身份运行】</li>\n<li>打开的cmd窗口直接回车会生成一个settings.txt文件，修改文件中配置信息</li>\n<li>配置nvm和Node.js环境变量</li>\n</ul>\n<blockquote>\n<p>NVM_HOME:C:\\dev\\nvm<br>NVM_SYMLINK:C:\\dev\\nodejs</p>\n</blockquote>\n<ul>\n<li>把配置好的两个环境变量加到Path中</li>\n</ul>\n<h3 id=\"nvm常用的命令\"><a href=\"#nvm常用的命令\" class=\"headerlink\" title=\"nvm常用的命令\"></a>nvm常用的命令</h3><ul>\n<li>nvm list 查看当前安装的Node.js所有版本</li>\n<li>nvm install 版本号 安装指定版本的Node.js</li>\n<li>nvm uninstall 版本号 卸载指定版本的Node.js</li>\n<li>nvm use 版本号 选择指定版本的Node.js</li>\n</ul>\n<h3 id=\"Node-js之HelloWorld\"><a href=\"#Node-js之HelloWorld\" class=\"headerlink\" title=\"Node.js之HelloWorld\"></a>Node.js之HelloWorld</h3><ul>\n<li>命令行方式REPL</li>\n<li>运行文件方式</li>\n<li>全局对象概览</li>\n</ul>\n<h3 id=\"Node-js-开发-Web-应用程序-和-PHP、Java、ASP-Net等传统模式开发Web应用程序区别\"><a href=\"#Node-js-开发-Web-应用程序-和-PHP、Java、ASP-Net等传统模式开发Web应用程序区别\" class=\"headerlink\" title=\"Node.js 开发 Web 应用程序 和 PHP、Java、ASP.Net等传统模式开发Web应用程序区别\"></a>Node.js 开发 Web 应用程序 和 PHP、Java、ASP.Net等传统模式开发Web应用程序区别</h3><ol>\n<li><h4 id=\"传统模式\"><a href=\"#传统模式\" class=\"headerlink\" title=\"传统模式\"></a>传统模式</h4></li>\n</ol>\n<ul>\n<li>有 Web 容器</li>\n</ul>\n<p>  <img src=\"/2023/06/08/NodeJs-%E5%AD%A6%E4%B9%A0/06/08/NodeJs-%E5%AD%A6%E4%B9%A0/Web.png\" alt=\"有Web容器开发模型\"></p>\n","categories":["后端"],"tags":["NodeJs"]},{"title":"React 学习","url":"/2023/06/08/React-%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"React-简介\"><a href=\"#React-简介\" class=\"headerlink\" title=\"React 简介\"></a>React 简介</h2><h3 id=\"一、什么是-React-？-What-is-React？\"><a href=\"#一、什么是-React-？-What-is-React？\" class=\"headerlink\" title=\"一、什么是 React ？(What is React？)\"></a>一、什么是 React ？(What is React？)</h3><blockquote>\n<p>React是一个声明式的，高效的，并且灵活的用于构建用户界面的 JavaScript 库。它允许您使用”components(组件)“（小巧而独立的代码片段）组合出各种复杂的UI。</p>\n</blockquote>\n<h3 id=\"二、React谁开发的？\"><a href=\"#二、React谁开发的？\" class=\"headerlink\" title=\"二、React谁开发的？\"></a>二、React谁开发的？</h3><blockquote>\n<p>由Facebook开发且开源，近十年“陈酿”，阿里等大厂开始使用</p>\n</blockquote>\n<h3 id=\"三、为什么要学？\"><a href=\"#三、为什么要学？\" class=\"headerlink\" title=\"三、为什么要学？\"></a>三、为什么要学？</h3><h4 id=\"amp-nbsp-一-原生js痛点\"><a href=\"#amp-nbsp-一-原生js痛点\" class=\"headerlink\" title=\"&amp;nbsp;(一)原生js痛点\"></a>&amp;nbsp;(一)原生js痛点</h4><ol>\n<li>原生JavaScript操作DOM繁琐、效率低（DOM-API操作UI）</li>\n</ol>\n<pre><code><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;app&#x27;</span>)<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)<br><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">&#x27;span&#x27;</span>)<br></code></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"2\">\n<li><p>使用JavaScript直接操作DOM，浏览器会进行大量的重绘重排</p>\n</li>\n<li><p>原生JavaScript没有组件化（模块化）编码方案，代码复用率低</p>\n</li>\n</ol>\n<h4 id=\"二-React特点\"><a href=\"#二-React特点\" class=\"headerlink\" title=\"(二)React特点\"></a>(二)React特点</h4><ol>\n<li><p>采用组件化模式，声明式编码，提高开发效率和组件复用率</p>\n</li>\n<li><p>在React Native中可以用React语法进行移动端开发</p>\n</li>\n<li><p>使用虚拟DOM和优秀的Diffing算法，尽量减少与真实DOM的交互，提高性能</p>\n</li>\n</ol>\n<h3 id=\"四、React依赖介绍？\"><a href=\"#四、React依赖介绍？\" class=\"headerlink\" title=\"四、React依赖介绍？\"></a>四、React依赖介绍？</h3>","categories":["前端"],"tags":["React"]},{"title":"Vue2 学习","url":"/2023/06/09/Vue2-%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"Vue-简介\"><a href=\"#Vue-简介\" class=\"headerlink\" title=\"Vue 简介\"></a>Vue 简介</h2><p>Vue 是一套用于构建用户界面的 渐进式框架 。</p>\n<p>与其它大型框架不同的是，Vue 采用自底向上增量开发的设计。</p>\n<p>Vue 的核心库只关注视图层，并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和Vue生态系统支持的库开发的复杂单页应用。</p>\n<p>Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。</p>\n<p>最初它不过是个人项目，时至今日，已成为全世界三大前端框架之一，github 上拥有 19.8万 Star。 领先于 React 和 Angular，在国内更是首选。</p>\n","categories":["前端"],"tags":["Vue"]},{"title":"Vue3 学习","url":"/2023/06/09/Vue3-%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"Vue3-简介\"><a href=\"#Vue3-简介\" class=\"headerlink\" title=\"Vue3 简介\"></a>Vue3 简介</h2>","categories":["前端"],"tags":["Vue"]},{"title":"Hello World","url":"/2023/05/24/hello-world/","content":"<h2 id=\"“永远不要失去浪漫的能力”。\"><a href=\"#“永远不要失去浪漫的能力”。\" class=\"headerlink\" title=\"“永远不要失去浪漫的能力”。\"></a>“永远不要失去浪漫的能力”。</h2><p>  ​这个浪漫不单单是指恋爱，更多的是：</p>\n<p>  对于世界的好奇和探索，阅读和书写，天真的想法和骨子里的善良，</p>\n<p>  对于生活必要的仪式感，以及拥有对恶意和黑暗的事物抱有愤怒和反抗的能力 ~</p>\n<p>  和这个世界交手多年，渐渐失去了一些耐心，身体劳累，精神也麻木，对什么都提不起兴趣，</p>\n<p>  把漫长的生命活成同一天，但这样不行，早晚有一天是要发疯的 ~</p>\n<p>  还是要一些坚守和浪漫，要一些别人看来非必要的事物来拯救自己 ~</p>\n<p>  要一些海风，夏天的雨，要低吟的音乐和沉浸的电影，要在心里点燃一盏烛火 ~</p>\n<p>  停止被这个世界融化，花一些时间在这些事物上，</p>\n<p>  凝成自己坚固的核，保护好自己闪闪发光的部分，哪怕只是徒劳 ~</p>\n<p>  觉得难过的时候，记得抬头看看月亮 ~</p>\n"},{"title":"小程序 学习","url":"/2023/06/09/%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"浅谈小程序\"><a href=\"#浅谈小程序\" class=\"headerlink\" title=\"浅谈小程序\"></a>浅谈小程序</h1><p>  在 2016 年的「微信公开课 Pro」演讲中，微信事业群总裁张小龙这样描述了小程序的前景与未来：</p>\n<blockquote>\n<p>“ 小程序是一种不需要下载安装即可使用的应用，它实现了应用 “触手可及” 的梦想，用户扫一扫或者搜一下即可打开应用。也体现了 “用完即走” 的理念，用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无须安装卸载 “。</p>\n</blockquote>\n<p>  小程序刚发布的时候要求压缩包的体积不能大于 1M，否则无法通过，在 2017 年 4 月做 了改进，由原来的 1M 提升到 2M；</p>\n<p>  2017 年 1 月 9 日 0 点，万众瞩目的微信第一批小程序正式低调上线。</p>\n<p>  而在 2020年的「WWDC 苹果全球开发者大会」中，轻应用则被作为 iOS 14 的主要功能进行强调与推介：</p>\n","categories":["前端"],"tags":["微信小程序"]},{"title":"uniapp-学习","url":"/2023/06/12/uniapp-%E5%AD%A6%E4%B9%A0/","content":"","categories":["前端"],"tags":["uniApp"]}]